services:
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: calendar_db
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d calendar_db"]
      interval: 30s
      timeout: 10s
      retries: 3

  api:
    build:
      context: ./backend
      dockerfile: Dockerfile
    working_dir: /app/backend
    ports:
      - "${API_PORT}:${API_PORT}"
    environment:
      - DATABASE_URL=postgresql+asyncpg://user:password@db:5432/calendar_db
      - SECRET_KEY=${SECRET_KEY}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES}
      - REFRESH_TOKEN_EXPIRE_DAYS=${REFRESH_TOKEN_EXPIRE_DAYS}
      - RELOAD=${RELOAD}
      - LOG_LEVEL=${LOG_LEVEL}
      - INSTALL_EXTRAS=${INSTALL_EXTRAS}
      - PORT=${API_PORT}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${VOLUME_MOUNT}
    restart: unless-stopped
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    working_dir: /app/frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    environment:
      - PORT=${FRONTEND_PORT}
      - VITE_API_BASE_URL=${VITE_API_BASE_URL}
    depends_on:
      - api
    volumes:
      - ${VOLUME_MOUNT}

volumes:
  postgres_data:
